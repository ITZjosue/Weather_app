{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","weatherData","setWeateherData","city","setCity","className","placeholder","onChange","e","target","value","onKeyPress","event","key","fetch","then","respuesta","json","data","main","name","sys","country","Math","round","temp","toFixed","weather","cod","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAmDeA,EAhDH,WAEV,IAEA,EAAsCC,mBAAS,CAAC,KAAhD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAuBF,mBAAS,IAAhC,mBAAOG,EAAP,KAAYC,EAAZ,KAcA,OACE,sBAAKC,UAAU,YAAf,UACE,uBACAA,UAAU,QACVC,YAAY,gBACZC,SAAY,SAAAC,GAAC,OAAIJ,EAAQI,EAAEC,OAAOC,QAClCA,MAAOP,EACPQ,WAnBe,SAACC,GACD,UAAdA,EAAMC,KACPC,MAAM,qDAAD,OAAsDX,EAAtD,kBAPM,qCAQVY,MAAK,SAAAC,GAAS,OAAIA,EAAUC,UAC5BF,MAAK,SAAAG,GACJhB,EAAgBgB,GAChBd,EAAQ,UAekB,oBAApBH,EAAYkB,KAClB,8BACE,+FAGF,sBAAKd,UAAU,eAAf,UACE,oBAAGA,UAAU,OAAb,UAAqBJ,EAAYmB,KAAjC,IAAwCnB,EAAYoB,IAAIC,WACxD,oBAAGjB,UAAU,OAAb,WAAsBkB,KAAKC,MAAMvB,EAAYkB,KAAKM,MAAM,QAAQC,QAAQ,GAAxE,WACA,mBAAGrB,UAAU,UAAb,SAAwBJ,EAAY0B,QAAQ,GAAGR,UAG9B,QAApBlB,EAAY2B,IACX,gDAEA,iCCjCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.3afcd480.chunk.js","sourcesContent":["import {useState} from 'react';\nimport './App.css'\n\nconst App = ()=>{\n\n  const apiKey = '4b97b8828fa2646615e9a92aee1fefa4';\n\n  const [weatherData,setWeateherData] = useState([{}]);\n  const [city,setCity] = useState('');\n\n  const getWeather = (event)=>{\n    if(event.key === 'Enter'){\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}`)\n      .then(respuesta => respuesta.json())\n      .then(data => {\n        setWeateherData(data)\n        setCity('')\n      })\n    }\n  }\n\n\n  return(\n    <div className='container'>\n      <input \n      className='input' \n      placeholder='Enter City...'\n      onChange = {e => setCity(e.target.value)}\n      value={city}\n      onKeyPress = {getWeather}\n      />\n      {typeof weatherData.main == 'undefined' ? (\n        <div>\n          <p>Welcome to wheather app! Enter a city to get the weather of.</p>\n        </div>\n      ):(\n        <div className='weather-data'>\n          <p className='city'>{weatherData.name} {weatherData.sys.country}</p>\n          <p className='temp'>{(Math.round(weatherData.main.temp)-273.15).toFixed(2)}Â°C</p>\n          <p className='weather'>{weatherData.weather[0].main}</p>\n        </div>\n      )}  \n      {weatherData.cod === '404' ? (\n        <p>City not found.</p>\n      ):(\n        <>\n        </>\n      )}\n    </div>\n  );\n};\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}